'''You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].

Return true if it is possible to form the array arr from pieces. Otherwise, return false.

Example 1:

Input: arr = [85], pieces = [[85]]
Output: true
Example 2:

Input: arr = [15,88], pieces = [[88],[15]]
Output: true
Explanation: Concatenate [15] then [88]
Example 3:

Input: arr = [49,18,16], pieces = [[16,18,49]]
Output: false
Explanation: Even though the numbers match, we cannot reorder pieces[0].'''

##JAVA APPROACH
//Even the array elements should match with the pieces of first array
class Solution {
    public boolean canFormArray(int[] arr, int[][] pieces) {
        List<Integer> l=new ArrayList<>();
        for(int i=0;i<arr.length;i++)
        {
                    for(int j=0;j<pieces.length;j++)
                    {
                        if(arr[i]==pieces[j][0])
                        {//if the arr and pieces match we add all those pieces elements into the list 
                            for(int k=0;k<pieces[j].length;k++){
                                l.add(pieces[j][k]);
                            }
                        }
                    }
            
        }
        //finally here we are checking if the lengths doesn't match we return false
        if(arr.length!=l.size()){
            return false;
        }
         //finally here we are checking if list elements match with the array elements
        for(int m=0;m<arr.length;m++) {
            if(arr[m]!=l.get(m)){
                return false;
            }
        }
        return true; 
    }
}
